@page "/"

<PageTitle>Inventory</PageTitle>

@using InventoryWebApp.Data
@inject InventoryItemService InventoryService

<h1>Inventory</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (inventory == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in inventory)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Quantity</td>
                </tr>
            }
            <tr>
                <td>@InventoryService.NextId()</td>
                <td> <input @bind="newName"></td>
                <td> <input @bind="newQuantity"></td>
                <td><button @onclick="AddItem">Add</button></td>
            </tr>
        </tbody>
    </table>
}

@code {
    private List<InventoryItem>? inventory;
    private string? newName;
    private int newQuantity;
    private async void AddItem(){
        if (!string.IsNullOrWhiteSpace(newName)){
            inventory = await InventoryService.AddAsync(new InventoryItem{Name = newName, Quantity = newQuantity});
            newQuantity = 0;
            newName = "";
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await UpdateInventory();
    }
    private async Task UpdateInventory(){
        inventory = await InventoryService.GetInventoryAsync();
    }
}
